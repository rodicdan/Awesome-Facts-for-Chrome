// Generated by CoffeeScript 1.3.3
(function(){var e,t,n;e=!1,t=function(t){if(e)return console.log(t)},n=function(){function e(){this.isEnabled=window.localStorage.getItem("pluginEnabled")||this.isEnabled,this.isEnabled===!0||this.isEnabled==="true"?(this.isEnabled=!0,window.localStorage.setItem("pluginEnabled",!0)):this.isEnabled=!1,window.FactsUtils.updateBadge(this.isEnabled),this.facts=JSON.parse(window.localStorage.getItem("factsList"))||this.facts,this.readFacts=JSON.parse(window.localStorage.getItem("factsRead"))||this.readFacts,this.fetchFactsIfRequired()}var n;return e.prototype.MINIMUM_FACTS_COUNT=50,e.prototype.MAX_STORED=200,e.prototype.factsUrl="http://simple-planet-5852.herokuapp.com/facts?format=json&count=80",e.prototype.factsIdentifier="factsList",e.prototype.readFactsIdentifier="factsRead",e.prototype.facts=[],e.prototype.readFacts={count:0},e.prototype.isEnabled=!0,n=null,e.instance=function(){return n!=null?n:n=new this},e.prototype.fetchFacts=function(e){var n=this;return e==null&&(e=null),t("fetching facts"),$.get(this.factsUrl,function(r){if(r!=null){n.facts=n.facts.concat(r),t(n.facts),n.saveFacts();if(e!=null)return e(n.facts)}})},e.prototype.fetchFactsIfRequired=function(){t("checking if fetch needed");if(this.facts.length<this.MINIMUM_FACTS_COUNT)return this.fetchFacts()},e.prototype.getFact=function(){var e;this.fetchFactsIfRequired(),e=this.facts.splice(0,1)[0],t(e);while(this.isReadFact(e))e=this.facts.splice(0,1)[0];return this.saveReadFact(e),this.saveFacts(),e},e.prototype.saveFacts=function(){return window.localStorage.setItem(this.factsIdentifier,JSON.stringify(this.facts))},e.prototype.saveReadFacts=function(){return window.localStorage.setItem(this.readFactsIdentifier,JSON.stringify(this.readFacts))},e.prototype.saveReadFact=function(e){return this.readFacts[e.id]=!0,this.readFacts.count+=1,this.saveReadFacts(),this.clearReadFactsIfRequired()},e.prototype.isReadFact=function(e){return this.readFacts[e.id]!=null?!0:!1},e.prototype.clearReadFactsIfRequired=function(){if(this.readFacts.count>this.MAX_STORED)return this.readFacts={count:0},this.saveReadFacts()},e}(),n.instance(),chrome.extension.onRequest.addListener(function(e,t,r){var i;if(e.action==="getFact")return r({value:n.instance().getFact()});if(e.action==="isEnabled")return i=window.localStorage.getItem("pluginEnabled")==="true",r({value:i})})}).call(this);